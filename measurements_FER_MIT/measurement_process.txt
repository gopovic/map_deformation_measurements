Collecting data in Matlab:

1) Select N corners on ground truth map and measure 
   all possible distances between them.   		(GTx in .mat files)

2) Find the corners on built map and measure all 
   distances between them.		   

3) Repeat step 2) few times				(GMapping_pointx in .mat files) -> from x to all other points 
											   (without repeating already measured distances)
											-> cells are points x+1|x+2|...|; 
											   each row is one simulation

4) Find absolute error for each measurement 		(GMapping_pointx_error in .mat files)
   (abs(D_measured-D_groundtruth))


5) Call "calculate_mean_and_limit.m" function with 	(column of GMapping_pointx_error in .mat files)
   array of measurements of the same distance from 
   different simulations. 
   Function will return vector [mean; limit]. "limit"
   defines boundaries which cover 96% error distribution 
   [mean-limit, mean+limit] ->  (1-alpha confidence 
   interval, for alpha=0.05)



Plotting in Python: 

1) Write calculated means and limits in corresponding 	(GMapping's mean/limits in "GMapping_means"/"GMapping_lims" array)
   variable.    

2) It's hard to see anything if there are more than 15
   bar groups, so in my case I've split 21 distances
   in two graphs.
